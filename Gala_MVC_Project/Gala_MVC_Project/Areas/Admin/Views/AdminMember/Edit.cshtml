@model Gala_MVC_Project.Areas.Admin.Models.MemberModel

    @{
        ViewBag.Title = "Edit";
        Layout = "~/Areas/Admin/Views/Shared/_Secomdary_Layout.cshtml";
    }

    <div class="row outer-Box" style=" margin-top:20px; padding-bottom:0!important;">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading">Step <span class="badge ">1</span> <span class="label label-primary"> Select a Coountry </span> </div>
                <div class="panel-body">
                    <div class="form-group " style="  padding-bottom:0!important;">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                               
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Member.Id)
                                @Html.HiddenFor(model => model.Member.FirmID)
                                @Html.HiddenFor(model => model.Member.Created)
                                @Html.HiddenFor(model => model.Member.isDeleted)

                                <div class="form-group">

                                    <img src="~/Images/Members/noimg.jpg" />
                                    <br />
                                    <br />
                                    @Html.CheckBoxFor(c => c.isNewPicture, new { id = "checkIfNew" })
                                    <label>Check to select new Image</label>
                                    <div id="newPicture" style="display:none;">
                                        @Html.LabelFor(m => m.ImageUpload)
                                        @Html.TextBoxFor(m => m.ImageUpload, new { @type = "file" })

                                    </div>
                                    <br />
                                    <br />
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Member.Type, (IEnumerable<SelectListItem>)ViewBag.type, new { @class = "form-control ", id = "Countryid" })
                                    
                                        @Html.ValidationMessageFor(model => model.Member.Type, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.FName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Member.FName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Member.FName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.LName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Member.LName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Member.LName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.MInitial, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Member.MInitial, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Member.MInitial, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Member.Picture, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Member.Picture, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.BIO, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.Member.BIO, 80, 10, new { @class = "form-control ckeditor investment-detail-content", @name = "editor1" })
                                        @Html.ValidationMessageFor(model => model.Member.BIO, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Member.Title, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Member.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Member.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Member.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Member.Tel, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Member.Tel, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Member.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Member.Fax, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Member.Fax, "", new { @class = "text-danger" })
                                    </div>
                                </div>





                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }

                        <div>
                            @Html.ActionLink("Back to List", "MemberList")
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>
